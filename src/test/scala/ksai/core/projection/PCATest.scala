package ksai.core.projection

import ksai.data.parser.{ARFFParser, Delimited, DelimitedParser}
import ksai.training.validation.{LOOCV, ValidationImplicits}
import org.scalatest.{FlatSpec, Matchers}

import scala.collection.mutable.ArrayBuffer


class PCATest extends FlatSpec with Matchers with ValidationImplicits {
  private[projection] val USArrests: Array[Array[Double]] = Array(Array(13.2, 236, 58, 21.2), Array(10.0, 263, 48, 44.5), Array(8.1, 294, 80, 31.0), Array(8.8, 190, 50, 19.5), Array(9.0, 276, 91, 40.6), Array(7.9, 204, 78, 38.7), Array(3.3, 110, 77, 11.1), Array(5.9, 238, 72, 15.8), Array(15.4, 335, 80, 31.9), Array(17.4, 211, 60, 25.8), Array(5.3, 46, 83, 20.2), Array(2.6, 120, 54, 14.2), Array(10.4, 249, 83, 24.0), Array(7.2, 113, 65, 21.0), Array(2.2, 56, 57, 11.3), Array(6.0, 115, 66, 18.0), Array(9.7, 109, 52, 16.3), Array(15.4, 249, 66, 22.2), Array(2.1, 83, 51, 7.8), Array(11.3, 300, 67, 27.8), Array(4.4, 149, 85, 16.3), Array(12.1, 255, 74, 35.1), Array(2.7, 72, 66, 14.9), Array(16.1, 259, 44, 17.1), Array(9.0, 178, 70, 28.2), Array(6.0, 109, 53, 16.4), Array(4.3, 102, 62, 16.5), Array(12.2, 252, 81, 46.0), Array(2.1, 57, 56, 9.5), Array(7.4, 159, 89, 18.8), Array(11.4, 285, 70, 32.1), Array(11.1, 254, 86, 26.1), Array(13.0, 337, 45, 16.1), Array(0.8, 45, 44, 7.3), Array(7.3, 120, 75, 21.4), Array(6.6, 151, 68, 20.0), Array(4.9, 159, 67, 29.3), Array(6.3, 106, 72, 14.9), Array(3.4, 174, 87, 8.3), Array(14.4, 279, 48, 22.5), Array(3.8, 86, 45, 12.8), Array(13.2, 188, 59, 26.9), Array(12.7, 201, 80, 25.5), Array(3.2, 120, 80, 22.9), Array(2.2, 48, 32, 11.2), Array(8.5, 156, 63, 20.7), Array(4.0, 145, 73, 26.2), Array(5.7, 81, 39, 9.3), Array(2.6, 53, 66, 10.8), Array(6.8, 161, 60, 15.6))


  "PCA" should "load the values easily" in {
    val prop: Array[Double] = Array(0.9655342, 0.02781734, 0.005799535, 0.0008489079)
    val cumprop: Array[Double] = Array(0.9655342, 0.99335156, 0.999151092, 1.0000000000)
    val loadings: Array[Array[Double]] = Array(Array(-0.0417043206282872, -0.0448216562696701, -0.0798906594208108, -0.994921731246978), Array(-0.995221281426497, -0.058760027857223, 0.0675697350838043, 0.0389382976351601), Array(-0.0463357461197108, 0.97685747990989, 0.200546287353866, -0.0581691430589319), Array(-0.075155500585547, 0.200718066450337, -0.974080592182491, 0.0723250196376097))
    val points: Array[Array[Double]] = Array(Array(-64.8021636817436, -11.4480073977837, 2.49493284038366, -2.40790093375486), Array(-92.8274501566946, -17.9829427006718, -20.1265748735977, 4.09404703053042), Array(-124.068216289648, 8.83040304270359, 1.68744835668708, 4.35368520359609), Array(-18.3400354054072, -16.7039113810096, -0.210189364140469, 0.520993603601999), Array(-107.422953125475, 22.5200697704229, -6.74587299235952, 2.81182590291373), Array(-34.9759859594071, 13.7195840329554, -12.2793628034841, 1.72146370000854), Array(60.8872819318546, 12.9325301564357, 8.42065718885695, 0.699902287100493), Array(-66.7310254465241, 1.35379779717711, 11.2809573450628, 3.72798119075026), Array(-165.244370319248, 6.27469006959416, 2.99793314838690, -1.24768071379144), Array(-40.5351765876529, -7.29023959219438, -3.60952945561059, -7.34367284165603), Array(123.536105769847, 24.291207910916, -3.72444284008562, -3.47284940369505), Array(51.7970022509676, -9.46919099467921, 1.52006355638492, 3.347828326557), Array(-78.9920972971611, 12.8970604614357, 5.88326476858706, -0.36764073849423), Array(57.5509607347644, 2.84626471235194, -3.73816048848585, -1.64943016073772), Array(115.586789703854, -3.34213050228539, 0.654029354180591, 0.869495984279686), Array(55.7896941123023, 3.15723392471998, -0.384364163111931, -0.65279168994279), Array(62.383180611208, -10.6732714680385, -2.23708902971565, -3.87621641192646), Array(-78.2776313152135, -4.29491749799139, 3.82786965239577, -4.48355899807498), Array(89.2610442661687, -11.4878272008390, 4.69240561590091, 2.11619948317566), Array(-129.330135502788, -5.00703147597233, 2.34717281642702, 1.92832424634248), Array(21.2662826315275, 19.4501790329282, 7.5071483512444, 1.03481894814417), Array(-85.4515266722104, 5.90455669704365, -6.46434210133595, -0.499047890295277), Array(98.9548155235302, 5.20960058227443, -0.00657375986111987, 0.731895663983765), Array(-86.8563576862984, -27.4284196328667, 5.00343623998489, -3.87975768645157), Array(-7.98628866990333, 5.27564139833892, -5.50057972194064, -0.67940550460075), Array(62.4836353013543, -9.51050205328579, -1.83835536172303, -0.245942647407812), Array(69.096544351272, -0.211195916792749, -0.468020859327737, 0.656566426699305), Array(-83.6135784392142, 15.1021838986663, -15.8886948158415, -0.334196243688033), Array(114.777354501664, -4.73455836403614, 2.28238693378110, 0.935910562750778), Array(10.815725119435, 23.1373388713124, 6.31015739277925, -1.61242729238686), Array(-114.86816260433, -0.336453098274837, -2.26126996009524, 1.38124776395531), Array(-84.2942305183222, 15.9239655420362, 4.72125960088988, -0.89201935012913), Array(-164.325514489152, -31.0966152578345, 11.6961635002625, 2.11119273326001), Array(127.495596550323, -16.1350393817083, 1.31182982457759, 2.30096391525437), Array(50.0868216712847, 12.2793243774034, -1.65733077217564, -2.02911567315058), Array(19.6937228951609, 3.3701310208186, 0.453143294595288, 0.180345739332141), Array(11.1502395794911, 3.8660681516975, -8.12998049836994, 2.91401088922199), Array(64.6891419240492, 8.91154655201737, 3.20646858319651, -1.87493530726351), Array(-3.06397257106163, 18.3739704209844, 17.4700196999280, 2.30825967705141), Array(-107.281068657401, -23.5361158958813, 2.03279501430637, -1.25174625682114), Array(86.1067200506117, -16.5978586472767, -1.31437998489870, 1.25228738950292), Array(-17.5062642727291, -6.50657560196015, -6.10012753172529, -3.9228557513671), Array(-31.2911217386536, 12.984956649108, 0.393409217561249, -4.24200404821675), Array(49.9133974043838, 17.6484576673340, -1.78816852005472, 1.86770523912379), Array(124.714469158317, -27.3135590838199, -4.80277765111824, 2.00498567770794), Array(14.8174481590233, -1.7526150184141, -1.04538813418230, -1.17384083282033), Array(25.0758389831245, 9.96796690580462, -4.78112763617555, 2.69108186122184), Array(91.5446469773181, -22.9528777669385, 0.401983435298255, -0.736878098420183), Array(118.176327855097, 5.50757920474225, 2.71132076743689, -0.204972398473778), Array(10.4345393883043, -5.92445292066816, 3.79444682032120, 0.517867427500318))
    val pca = PCA(USArrests.map(_.to[ArrayBuffer]).to[ArrayBuffer])
    val newPCA = PCA.setProjection(4, pca)

    val p = newPCA.project(USArrests.map(_.to[ArrayBuffer]).to[ArrayBuffer])
    /*(0 to points.length -1 ).foreach{index =>
      (0 to points(index).length -1).foreach{jIndex =>
        assert(Math.abs(points(index)(jIndex)) == Math.abs(p(index,jIndex)))
      }
    }*/
  }


}
